eashwar@eashwar-INVALID:~/Desktop/Valgrind_Exercise/build$ valgrind --leak-check=full ./app/shell-app
==7651== Memcheck, a memory error detector
==7651== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==7651== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==7651== Command: ./app/shell-app
==7651== 
Averaged sensor reading: 10         //ERROR 1
==7651== Conditional jump or move depends on uninitialised value(s)  //ERROR 2
==7651==    at 0x401DC7: main (main.cpp:8)
==7651== 
==7651== 
==7651== HEAP SUMMARY:
==7651==     in use at exit: 72,748 bytes in 3 blocks
==7651==   total heap usage: 4 allocs, 1 frees, 73,772 bytes allocated
==7651== 
==7651== 44 (24 direct, 20 indirect) bytes in 1 blocks are definitely lost in loss record 2 of 3
==7651==    at 0x4C2E0EF: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7651==    by 0x401EEA: AnalogSensor::Read() (AnalogSensor.cpp:16)
==7651==    by 0x401D9A: main (main.cpp:6)
==7651== 
==7651== LEAK SUMMARY:
==7651==    definitely lost: 24 bytes in 1 blocks
==7651==    indirectly lost: 20 bytes in 1 blocks
==7651==      possibly lost: 0 bytes in 0 blocks
==7651==    still reachable: 72,704 bytes in 1 blocks
==7651==         suppressed: 0 bytes in 0 blocks
==7651== Reachable blocks (those to which a pointer was found) are not shown.
==7651== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==7651== 
==7651== For counts of detected and suppressed errors, rerun with: -v
==7651== Use --track-origins=yes to see where uninitialised values come from
==7651== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)  //TOTAL TWO ERRORS IDENTIFIED

